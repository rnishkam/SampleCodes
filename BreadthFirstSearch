
Uses a queue.
public void BFS()
        {
            if (root == null)
                throw new NullReferenceException();
            var queue = new Queue<Node>();
            queue.Enqueue(root);
            while (queue.Count > 0)
            {
                var temp = queue.Dequeue();
                temp.Display();
                if (temp.left != null)
                    queue.Enqueue(_temp.left);
                if (temp.right != null)
                    queue.Enqueue(temp.right);
            }
        }
